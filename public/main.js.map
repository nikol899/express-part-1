{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- add new item -->\\n\\n<section>\\n<h1>List of Products</h1>\\n<div class=\\\"listofItems\\\" *ngFor=\\\"let shopping of shopping_cart;index as i\\\">\\n    <p>Product:{{shopping.product}}</p>\\n    <p>Price: ${{shopping.price}}</p>\\n    <p>Quantity:{{shopping.quantity}}</p>\\n\\n    <button (click)=\\\"toggle(i)\\\">Edit</button>\\n    <i class=\\\"fas fa-trash\\\" (click)=\\\"deleteItem(shopping.id)\\\"></i>\\n\\n    <!-- update form -->\\n<form #updateForm=\\\"ngForm\\\" \\n(ngSubmit)=\\\"[updateNewProduct(shopping),toggle(i)]\\\"\\n *ngIf=shopping.updatingForm class=\\\"editForm\\\">\\n\\n    <label>Product:</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"shopping.product\\\" name=\\\"product\\\">\\n\\n    <label>Price $</label>\\n    <input type=\\\"number\\\" [(ngModel)]=\\\"shopping.price\\\" name=\\\"price\\\">\\n\\n    <label>Quantity:</label>\\n    <input type=\\\"number\\\" [(ngModel)]=\\\"shopping.quantity\\\" name=\\\"quantity\\\">\\n    <button>Update</button>\\n</form>\\n</div>\\n</section>\\n\\n\\n<form #productForm=\\\"ngForm\\\"  *ngIf=\\\"!showAdd\\\" (ngSubmit)=\\\"addNewItem(productForm)\\\" class=\\\"addform\\\">\\n    \\n    <label>Product:</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"product\\\">\\n\\n    <label>Price:</label>\\n    <input type=\\\"number\\\" ngModel name=\\\"price\\\">\\n\\n    <label>Quantity:</label>\\n    <input type=\\\"number\\\" ngModel name=\\\"quantity\\\">\\n    <button>Add</button>\\n    \\n</form>\\n<h2 (click)=toggleAdd()>Add New Product</h2>\"","import { Component } from '@angular/core';\nimport { CartService } from './cart.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n shopping_cart:any;\n  showAdd:boolean=true;\n constructor(private cartService:CartService){\n\n   this.cartService.getAllItems().subscribe(response =>{\n     this.shopping_cart=response;\n     console.log(this.shopping_cart);\n   });\n }\n addNewItem(form){\n  console.log(form);\n   this.cartService.addItem(form).subscribe(response=>{\n    this.shopping_cart = response;\n   });\n }\n\ndeleteItem(id){\n  this.cartService.removeItem(id).subscribe(response=>{\n    this.shopping_cart =response;\n  });\n}\nupdateNewProduct(items){\n  console.log(items);\n  this.cartService.updateItem(items).subscribe(response=>{\n    this.shopping_cart=response;\n  })\n}\ntoggleAdd(){\n  this.showAdd=!this.showAdd;\n}\ntoggle(index){\n  \n  this.shopping_cart[index].updatingForm=!this.shopping_cart[index].updatingForm;\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{HttpClientModule} from '@angular/common/http';\nimport{CartService} from './cart.service';\nimport { AppComponent } from './app.component';\nimport{FormsModule} from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [CartService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private http:HttpClient) { }\n  getAllItems(){\n    return this.http.get(\"/api/cartitems\",{responseType:\"json\"});\n  }\n  addItem(item){\n    console.log(item);\n    return this.http.post(\"/api/cartitems\", item.value,{responseType:\"json\"});\n  }\n  removeItem(id){\n    return this.http.delete(`/api/cartitems/${id}`,{responseType:\"json\"});\n  }\n  updateItem(item){\n    return this.http.put(`/api/cartitems/${item.id}`,item,{responseType:\"json\"});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}